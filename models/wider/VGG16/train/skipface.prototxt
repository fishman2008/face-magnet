name: "VGG_ILSVRC_16_layers"
layer {
  name: 'input-data'
  type: 'Python'
  top: 'data'
  top: 'im_info'
  top: 'gt_boxes'
  python_param {
    module: 'roi_data_layer.layer'
    layer: 'RoIDataLayer'
    param_str: "'num_classes': 2"
  }
}

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "data"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv_height_2"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv_height_2"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv_height_1"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv_height_1"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv_height_0"
}
#==========RPN NORM
layer{
    name: "normal2_all"
    type: "Normalization"
    bottom: "conv_height_2"
    top: "normal_conv_height_2"
}


layer {
  name: "conv_height_1_up"
  type: "Deconvolution"
  bottom: "conv_height_1"
  top: "conv_height_1_up"
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 4
    stride: 2
    weight_filler: { type: "bilinear" }
  }
}

layer {
  name: "conv_height_1_upc"
  type: "Crop"
  bottom: "conv_height_1_up"
  bottom: "conv_height_2"
  top: "conv_height_1_upc"
  crop_param {
    axis: 2
    offset: 2
  }
}

layer{
    name: "normal1_all"
    type: "Normalization"
    bottom: "conv_height_1_upc"
    top: "normal_conv_height_1"
}

layer {
  name: "conv_height_0_up"
  type: "Deconvolution"
  bottom: "conv_height_0"
  top: "conv_height_0_up"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1
    bias_term: false
    kernel_size: 8
    stride: 4
    weight_filler: { type: "bilinear" }
  }
}

layer {
  name: "conv_height_0_upc"
  type: "Crop"
  bottom: "conv_height_0_up"
  bottom: "conv_height_2"
  top: "conv_height_0_upc"
  crop_param {
    axis: 2
    offset: 4
  }
}

layer{
    name: "normal0_all"
    type: "Normalization"
    bottom: "conv_height_0_upc"
    top: "normal_conv_height_0"
}

layer{
    name: "normals_concat_all"
    type: "Concat"
    bottom: "normal_conv_height_0"
    bottom: "normal_conv_height_1"
    bottom: "normal_conv_height_2"
    top: "normals_all_concat"
    concat_param{
        axis: 1
    }
}


layer {
   name: "concat_scale_all"
   type: "Scale"
   bottom: "normals_all_concat"
   top: "normals_concat_scaled_all"
       param {
            lr_mult: 0
            decay_mult: 0
      }
  scale_param{
      filler{
         type: "constant"
         value: 1000
      }
   }
}

layer{
  name: "fusion_conv_all"
  type: "Convolution"
  bottom: "normals_concat_scaled_all"
  top: "fusion_convs_all"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1

    weight_filler {
      type: "xavier"
    }

    bias_filler {
      type: "constant"
    }
  }
}

#============== RPN ===============

layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "fusion_convs_all"
  top: "rpn/output3x3"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 384
    kernel_size: 3 pad: 1 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "rpn_conv/5x5"
  type: "Convolution"
  bottom: "fusion_convs_all"
  top: "rpn/output5x5"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer {
  name: "rpn_conv/7x7"
  type: "Convolution"
  bottom: "fusion_convs_all"
  top: "rpn/output7x7"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 128
    kernel_size: 5 pad: 2 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}

layer{
  name: "rpn_concat/3x3and5x5"
  type: "Concat"
  bottom: "rpn/output3x3"
  bottom: "rpn/output5x5"
  bottom: "rpn/output7x7"
  top: "rpn/output"
  concat_param{
      axis: 1
  }
}

layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score7"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 24   # 2(bg/fg) * 21(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
  name: "rpn_bbox_pred7"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param { lr_mult: 1.0 decay_mult: 1.0 }
  param { lr_mult: 2.0 decay_mult: 0 }
  convolution_param {
    num_output: 48   # 4 * 21(anchors)
    kernel_size: 1 pad: 0 stride: 1
    weight_filler { type: "gaussian" std: 0.01 }
    bias_filler { type: "constant" value: 0 }
  }
}
layer {
   bottom: "rpn_cls_score"
   top: "rpn_cls_score_reshape"
   name: "rpn_cls_score_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}
layer {
  name: 'rpn-data'
  type: 'Python'
  bottom: 'rpn_cls_score'
  bottom: 'gt_boxes'
  bottom: 'im_info'
  bottom: 'data'
  top: 'rpn_labels'
  top: 'rpn_bbox_targets'
  top: 'rpn_bbox_inside_weights'
  top: 'rpn_bbox_outside_weights'
  python_param {
    module: 'rpn.anchor_target_layer'
    layer: 'AnchorTargetLayer'
    param_str: "{'feat_stride': 4,'scales': [0.3,0.5,1,3,8,12,24,32,48,64,72,92], 'ratios':[1,]}"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  propagate_down: 1
  propagate_down: 0
  top: "rpn_cls_loss"
  loss_weight: 1
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: 'rpn_bbox_inside_weights'
  bottom: 'rpn_bbox_outside_weights'
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param { sigma: 3.0 }
}
#============== ROI Proposal ===============
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: 'rpn_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'rpn_cls_prob'
  top: 'rpn_cls_prob_reshape'
  reshape_param { shape { dim: 0 dim: 24 dim: -1 dim: 0 } }
}
layer {
  name: 'proposal'
  type: 'Python'
  bottom: 'rpn_cls_prob_reshape'
  bottom: 'rpn_bbox_pred'
  bottom: 'im_info'
  top: 'rpn_rois'
  python_param {
    module: 'rpn.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "{'feat_stride': 4,'scales': [0.3,0.5,1,3,8,12,24,32,48,64,72,92], 'ratios':[1,]}"
  }
}
layer {
  name: 'roi-data'
  type: 'Python'
  bottom: 'rpn_rois'
  bottom: 'gt_boxes'
  top: 'rois'
  top: 'labels'
  top: 'bbox_targets'
  top: 'bbox_inside_weights'
  top: 'bbox_outside_weights'
  python_param {
    module: 'rpn.proposal_target_layer'
    layer: 'ProposalTargetLayer'
    param_str: "'num_classes': 2"
  }
}
#========= RCNN ============



layer{
  name: 'context_generator'
  type: 'Python'
  bottom: 'data'
  bottom: 'rois'
  top: 'rois_context'
  python_param {
    module: 'context.context_generator'
    layer: 'ContextGenerator'
    param_str: "{'num_classes': 2,'w_scale': 3, 'h_scale': 4, 'x_rel_pos': 0.5, 'y_rel_pos':0.25}"
  }
}

layer {
  name: "roi_pool3_context"
  type: "ROIPooling"
  bottom: "conv_height_2"
  bottom: "rois_context"
  top: "skip3_context"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.25 # 1/16
  }
}

layer {
  name: "roi_pool4_context"
  type: "ROIPooling"
  bottom: "conv_height_1"
  bottom: "rois_context"
  top: "skip4_context"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.125 # 1/8
  }
}

layer {
  name: "roi_pool5_context"
  type: "ROIPooling"
  bottom: "conv_height_0"
  bottom: "rois_context"
  top: "skip5_context"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
}

layer{
    name: "normal3_context"
    type: "Normalization"
    bottom: "skip3_context"
    top: "normal_3_context"
}
layer{
    name: "normal4_context"
    type: "Normalization"
    bottom: "skip4_context"
    top: "normal_4_context"
}
layer{
    name: "normal5_context"
    type: "Normalization"
    bottom: "skip5_context"
    top: "normal_5_context"
}

layer {
  name: "roi_pool3"
  type: "ROIPooling"
  bottom: "conv_height_2"
  bottom: "rois"
  top: "skip3"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.25 # 1/16
  }
}

layer {
  name: "roi_pool4"
  type: "ROIPooling"
  bottom: "conv_height_1"
  bottom: "rois"
  top: "skip4"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.125 # 1/16
  }
}

layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv_height_0"
  bottom: "rois"
  top: "skip5"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
}

layer{
    name: "normal3"
    type: "Normalization"
    bottom: "skip3"
    top: "normal_skip3"
}
layer{
    name: "normal4"
    type: "Normalization"
    bottom: "skip4"
    top: "normal_skip4"
}
layer{
    name: "normal5"
    type: "Normalization"
    bottom: "skip5"
    top: "normal_skip5"
}

layer{
    name: "normals_concat"
    type: "Concat"
    bottom: "normal_skip3"
    bottom: "normal_skip4"
    bottom: "normal_skip5"
    top: "normals_concat"
    concat_param{
        axis: 1
    }
}


layer {
   name: "concat_scale"
   type: "Scale"
   bottom: "normals_concat"
   top: "normals_concat_scaled"
       param {
            lr_mult: 0
            decay_mult: 0
      }
  scale_param{
      filler{
         type: "constant"
         value: 1000
      }
   }
}

layer{
  name: "fusion_convss"
  type: "Convolution"
  bottom: "normals_concat_scaled"
  top: "fusion_convs"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1

    weight_filler {
      type: "xavier"
    }

    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "relu6_fusion_convs"
  type: "ReLU"
  bottom: "fusion_convs"
  top: "fusion_convs"
}

layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "fusion_convs"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  propagate_down: 1
  propagate_down: 0
  top: "loss_cls"
  loss_weight: 1
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox"
  loss_weight: 1
}

### Context FC6 FC7


layer{
    name: "normals_concat_context"
    type: "Concat"
    bottom: "normal_3_context"
    bottom: "normal_4_context"
    bottom: "normal_5_context"
    top: "normals_concat_context"
    concat_param{
        axis: 1
    }
}


layer {
   name: "concat_scale_context"
   type: "Scale"
   bottom: "normals_concat_context"
   top: "normals_concat_scaled_context"
       param {
            lr_mult: 0
            decay_mult: 0
      }
  scale_param{
      filler{
         type: "constant"
         value: 1000
      }
   }
}

layer{
  name: "fusion_convss_context"
  type: "Convolution"
  bottom: "normals_concat_scaled_context"
  top: "fusion_convs_context"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 0
    kernel_size: 1

    weight_filler {
      type: "xavier"
    }

    bias_filler {
      type: "constant"
    }
  }
}

layer {
  name: "copy_from_fc6"
  type: "InnerProduct"
  bottom: "fusion_convs_context"
  top: "fc6_context"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6_context"
  type: "ReLU"
  bottom: "fc6_context"
  top: "fc6_context"
}
layer {
  name: "drop6_context"
  type: "Dropout"
  bottom: "fc6_context"
  top: "fc6_context"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "copy_from_fc7"
  type: "InnerProduct"
  bottom: "fc6_context"
  top: "fc7_context"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7_context"
  type: "ReLU"
  bottom: "fc7_context"
  top: "fc7_context"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7_context"
  top: "fc7_context"
  dropout_param {
    dropout_ratio: 0.5
  }
}


### CONCAT MAIN AND CONTEXT
layer{
    name: "final_cls_concat"
    type: "Concat"
    bottom: "fc7"
    bottom: "fc7_context"
    top: "final_cls_feature"
    concat_param{
        axis: 1
    }
}


### FINAL CLASSIFER
layer {
  name: "cls_score_face_context"
  type: "InnerProduct"
  bottom: "final_cls_feature"
  top: "cls_score_context"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred_face_context"
  type: "InnerProduct"
  bottom: "final_cls_feature"
  top: "bbox_pred_context"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls_context"
  type: "SoftmaxWithLoss"
  bottom: "cls_score_context"
  bottom: "labels"
  top: "loss_cls_context"
  propagate_down: 1
  propagate_down: 0
  loss_weight: 1
}
layer {
  name: "loss_bbox_context"
  type: "SmoothL1Loss"
  bottom: "bbox_pred_context"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "loss_bbox_context"
  loss_weight: 1
}
